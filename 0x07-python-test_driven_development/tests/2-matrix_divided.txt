===========================================
Test cases for the module 2-matrix_divided
===========================================


Checking documentation
	>>> docs = __import__('2-matrix_divided').__doc__
	>>> len(docs) > 1
	True
	>>> func_docs = __import__('2-matrix_divided').matrix_divided.__doc__
	>>> len(func_docs) > 1
	True

Importing function
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test case for wrong types:
	>>> matrix_divided(9, 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([2, 4], 2)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([['a', 'b'], [2, 3]], 8)
	Traceback (most recent call last):
		...
 	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(['hello', [3, 'hi']], 9)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([['a', 'b'], [2, 3]], 8)
	Traceback (most recent call last):
	 	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test cases for non-matching sizes:
	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

Test case for wrong div type:
	>>> matrix_divided([[2, 3], [4, 5]], '5')
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix_divided([[3, 4, 9], [4, 9, 2]], [3, 9])
	Traceback (most recent call last):
		...
	TypeError: div must be a number

Test case for zero division:
	>>> matrix_divided([[1, 3], [2, 4]], 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

Test case for correct types:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix_divided([[5.5, 2.5], [4.2, 2.0]], 0.5)
	[[11.0, 5.0], [8.4, 4.0]]

Test cases for infinite div:
 	>>> matrix_divided([[6, 7], [8, 9]], float('inf'))
	[[0.0, 0.0], [0.0, 0.0]]

Test cases for missing 2 or arguments:
	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided([[1, 2]])
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
