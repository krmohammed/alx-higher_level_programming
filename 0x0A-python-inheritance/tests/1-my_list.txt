=================================================
	Tests cases for module 1-my_list
=================================================

Testing Docs:
	>>> docs = __import__('1-my_list').__doc__
	>>> len(docs) > 1
	True
	>>> docs = __import__('1-my_list').MyList.__doc__
	>>> len(docs) > 1
	True


Importing:
	>>> MyList = __import__('1-my_list').MyList

Test case for empty:
	>>> emp = MyList()
	>>> emp.print_sorted()
	[]

Test case for int args:
	>>> my = MyList()
	>>> my.append(3)
	>>> my.print_sorted()
	[3]
	>>> my.append(2)
	>>> my.append(4)
	>>> my.append(9)
	>>> my.pop()
	9
	>>> my.append(9)
	>>> my.append(7)
	>>> my.print_sorted()
	[2, 3, 4, 7, 9]


Test cases for floats:
	>>> a = MyList()
	>>> a.append(8.3)
	>>> a.append(0.3)
	>>> a.append(3.5)
	>>> a.pop()
	3.5
	>>> a.append(9.9)
	>>> a.print_sorted()
	[0.3, 8.3, 9.9]


Test cases for str:
	>>> c = MyList()
	>>> c.append('hello')
	>>> c.append(',')
	>>> c.append('my')
	>>> c.append('name')
	>>> c.append('is')
	>>> c.append('Khalil')
	>>> c.pop()
	'Khalil'
	>>> c.append('ShyKhid')
	>>> c.print_sorted()
	[',', 'ShyKhid', 'hello', 'is', 'my', 'name']


Test cases for negatives:
	>>> n = MyList()
	>>> n.append(-3)
	>>> n.append(2)
	>>> n.append(3)
	>>> n.append(-4)
	>>> n.pop()
	-4
	>>> n.append(-20)
	>>> n.print_sorted()
	[-20, -3, 2, 3]

Test cases for mixed types:
	>>> mix = MyList()
	>>> mix.append('kh')
	>>> mix.append(8)
	>>> mix.append(None)
	>>> mix.append(7)
	>>> mix.append(True)
	>>> mix.append(2)
	>>> mix.append('hi')
	>>> print(mix)
	['kh', 8, None, 7, True, 2, 'hi']
	>>> mix.print_sorted()
	Traceback (most recent call last):
		...
	TypeError: '<' not supported between instances of 'int' and 'str'
